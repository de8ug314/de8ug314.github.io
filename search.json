[{"title":"pwn：栈溢出(一）","date":"2022-01-28T02:50:25.000Z","url":"/2022/01f7a67c81.html","tags":[["pwn","/tags/pwn/"]],"categories":[["pwn","/categories/pwn/"]],"content":"基础的pwn虽然大概的知识框架有了些，但是要切实掌握还是需要做题的。这个系列大概就是我一边梳理记录知识点一边做题的过程（并不是入门教程）。主要会参考nightmare上的顺序和题，并且看情况补充。做题大概都是边做边记录（没有那么多绯红之王），所以翻车很正常,不过这样应该更能发现问题吧。题目clone这个就行了 stack buffer overflows首先进入04-bof_variable看看里面的tamu19_pwn1。这里文件给的算是一条龙了，exp和readme结合起来可以直接进行学习。话不多说，直接gdb打开后checksec（查看程序有哪些保护）先。至于这些保护有什么作用，以后再细🔒。r运行看看效果什么典故不太懂，总之是要输入点东西嘛流程大概就是这样具体，可以拖到ida里去分析了。看看main函数说了些啥，先F5大法 这个setvbuf有什么用呢，直接man手册man setvbuf（可能会出现没有该内容的错误，这是因为手册不全导致的，百度法修复即可）文档意思就是将stream写到buf里，mode就是使用的模式，size就是设置缓冲区的大小。题目就是将stdout的缓冲区设置到&amp;dword_0+2(至于指向的哪里也不太需要知道),但是大小为0。其实也就是让stdout不经过缓冲区。很多题目都有类似操作，应该是为了避免些写到缓冲区会发生的意料之外的错误吧。下面的代码就比较简单直接，就是几次用strcmp比较给出的字符和输入的字符。故事情节就是拉斯洛特来要圣杯（大概是亚瑟王传说里找圣杯的故事？记不太清了），然后明显的gets溢出触及对方的密码，让v5等于某值就可以执行print_flag了。这里就可以简单理解下什么叫栈溢出了（如果还不知道函数调用与栈的关系的话，可以看看隔壁的程序员的自我修养系列，虽然这个时候还没写到这来），个人比较喜欢地址从低到高想象栈，这样对溢出比较好理解。假设有这样一个简单的程序，欠的钱当然是程序本身就储存好的，不会让你修改，但是它要让告诉还想借多少，这个让我们输入数据的机会就给了我们可乘之机。假设对面是个大资本家，为了赚到你的利润多少钱都给的出手，那加入我们输入* 9999000000000000就会变成由于栈是先入后出，这里A的使用是在B使用后的，所以B的地址会在A的上面，当我们输入16个零时就能把A的9999覆盖成0000。这样就达成了我们不仅规避了高利贷的悲惨人生，还能在这随便拿钱。栈溢出基本原理就这个意思，根据程序的功能，函数执行的过程，溢出的地址和长度等等因素就产生了以后的种种花样。接下来就回到我们的题当中，这下就佷明了了，找到s和v5的地址不就完了嘛，gets就是个资本家，不限制输入长度，那就往里乱塞就行了。地址怎么找呢，我们在ida中把这个设置打开再点回ida view就可以看到对应的代码的地方了，为了方便，我们在软件上方Option-&gt;General勾选图中选项便可这样我们看到了地址，回到gdb下断点。我这里ida给出的代码段地址不能用，于是算便宜找地址（先在刚才设置那个地方勾选Function offset）看到这里的汇编指令 main+139 cmp [ebp+var_10], 0DEA110C8h然后gdb理输入start看到 0x56555788 &lt;main+15&gt; sub esp, 0x40这样我们要断点的地址就为0x56555788+0x139-0x15(都是16进制下的)可以在ida下面直接输入得到计算结果，这样断点后根据c伪代码进行相关输入 图床用起来真的挺恼火的，又传不了图片了。这几天先学学wpf写个工具吧"},{"title":"《程序员的自我修养》第一章","date":"2022-01-27T05:54:34.000Z","url":"/2022/01f7bb4902.html","tags":[["binary","/tags/binary/"],["pwn","/tags/pwn/"]],"categories":[["程序员的自我修养","/categories/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E8%87%AA%E6%88%91%E4%BF%AE%E5%85%BB/"]],"content":"学pwn的时间也不算短了，题练得不算多，但是零零碎碎也积累了一些知识片段。然而总会有许多拿不稳的地方，需要时时刻刻，反反复复的百度；同时也有大块知识缺漏的地方。于是想到细看一本书把知识串起来。经师傅推荐，发现这本书确实非常适合我，于是速速读之。该系列主要是适应我对二进制安全学习的要求，所以记录和理解也会主要围绕这一主题。 第一章：温故而知新关于硬件结构的变迁1.简单粗暴的一条总线(Bus)拉到底，设备都接总线上，就像并联电路一样，因此cpu和内存频率也都相同2.为了分速度处理设备，提高cpu可利用的效率等。分为用北桥(PCI bridge)芯片处理高速设备，南桥(south bridge)芯片处理速度要求低的设备，并且又各自总线汇总输入芯片处理，其中北桥还要连接cpu和内存（书上内容有些跳跃，大致就这样理解吧）3.SMP和多核：cpu的频率提升到了4GHz就到极限了。一个人推不动车一群人就能推动了，叠cpu能达到这样的效果是好的。开始人们发明了SMP（对称多处理器,symmertrical Multi-processing）,但这种模式没法让cpu集中力量干大事，争对同一道题，cpu只能跟考试一样各做各的，自己从头算到尾。只有给每个cpu不同的问题时才能发挥些作用。而多核就是把多个cpu打包，但是让他们共享一个缓存（相当于让它们只用一个草稿本来算） 软件体系结构分成了这么几个层，层与层之间通过接口(interface)通信。比如最上面只要狠抓落实(应用程序)，中间层层像套，下面到了最后搬砖砌瓦的工人(hardware)，便能得到一栋栋高楼大厦。简单的说，就是让我们做的最少，但做出的很大。具体的先不展开。 操作系统操作系统做什么呢，首先作为体系的一层，它提供接口，其次就对下管理系统资源，具体的说1.通过分配劳动，鞭挞cpu，榨干cpu的剩余价值：非配方式有如下 多道程序(multiprogramming)：这里的砖不用搬了，暂时用不上，啊？你想休息了，那边东西还多得很，赶快搬去 分时系统(Time-Sharing System):（接上面）不知道干啥？那边要搅混泥土，其他事情先不管，赶快过去帮忙 つづく"},{"title":"关于我的blog","date":"2022-01-26T11:08:50.000Z","url":"/2022/01d46252f1.html","tags":[["杂谈","/tags/%E6%9D%82%E8%B0%88/"]],"categories":[["杂谈","/categories/%E6%9D%82%E8%B0%88/"]],"content":" 序言：以前特别讨厌写作，现在想想，应该是受了某些文体的毒害吧。看着题目要求就得想好模板，开头怎么编，中间怎么凑，结尾怎么贴。或许偶尔看见了一些感兴趣，稍微可以有点思考的题目，想要在里面表达点自己的思想看法，便马上就被老师扣帽子，搞批斗。模仿一些优秀作文的写作思路，硬背一些意识形态正确的素材，就为了成为那千篇一律中的一枚。一篇下来，看着自己的文章就好像把什么不可名状之物跟自己大脑一起放在锅里搅作一团的烂汤一样，而自己却只能λ (хдх) (´＊｀) (≧m≦) (＾～＾)。我是很羡慕那些作文下来次次优秀以上的同学的，想必越王尝的胆都没有他们喝的这些汤苦(仅代表我这个语文渣的看法，可能也会有些人乐在其中？) （划清界线：依据规定，上文中出现的所有主角都不是高考作文)要说为什么现在会开始写起博客呢。我想主要是因为进了网络安全这个门吧。虽然说安全圈因为某些不可抗因素有种大家各自扎堆探险，圈地自萌的感觉，也有很多博流量四处借鉴的文章，但是，仍然可以看到有些文章记录了踩过的坑，遇过的难（突然发现我好像有点不用对偶不会讲谓语的习惯，这大概是xx后遗症吧，今后改正）；有讲学习心得，方法论的；甚至有将自己的学习体系都分享的。每次看都这些人在真真假假赛博世界真心耕耘的身影，我都会莫名的感叹，甚至感动。在这之后，我每次捧起书都能体会到什么叫人类智慧的结晶（抄袭除外）。 正文：(一段废话结束，是听一段废话的开始)因此，我决定在自己网上冲浪时也向大海挥洒自己的汗水。我敬佩所有追求知识和真理的人，如果我的博客或多或少能帮到你，也算是一种自我价值的实现吧。当你看到我的博客网站时，或许这里的文章还草草无几，或许已经水了不少了，或许因为遭到现实的毒打，碰碎了鼻子摔脏了尻而久久不更，或许还正满怀希望走在追梦的路上，但对我来说或许不只是单单的一些字，更是成长。现在的我想到这里就很奇妙，未来的我看到这篇幼稚的开篇演讲会想什么呢，，他经历了什么呢？又是否还记得现在的我在想什么呢。不出意外的话，我的博客内容应该是五花八门的。好像在高考失利后打开了什么枷锁一样，现在的我对感兴趣的东西就想学，想做的事情就想去完成。当然也并不是打雨露均沾剑法的，哈哈。然后大概会是一些笔记（不是很想用笔记的东西）被放在这里，一些知识自己的理解，但不完全是理论，所以可能并不完全严谨，不过有什么错误还请大家联系指正，然后就是像这篇文章一样的随手乱写。我没有什么文笔，也对自己玩的烂梗，憋的冷笑话能否博君一乐没有什么自信。如果看不惯我的行文，还请不要随地吐痰了。读书时我属于那种不想给没有任何追求的同学抄作业的类型，不过为了避免塑造成一个正经老实的好学生（表面上）的形象，我还是会不情愿的把作业递过去，偷偷地投以鄙夷的眼神。但是相反的，虽然我不善于组织言语，表达情感，但我却想尽全力的将自己所理解的知识分享给那些真心请教的同学。同时，我也会巴不得舔着别人脚似地向别人请教。此外，博客主要是知识技术类的，偶尔的私货和杂谈仅代表个人观点，原则上没有政治话题，想谈也不懂啊，我也不想当情强哥，网络世界懂得都懂，不懂就算了，如果不小心扯到两句，还请不要顺着网线来打我。写博客的目的大概就是起因了，想要分享知识，创造一个自己思想的いい場所。或许大家就是百度某个问题恰好我也踩过雷了，我的文章能帮助大家节省点时间少走点弯路，我也就满足了。如果没人看我会没有继续的动力吗，应该不会，我想写博客对自己本身就是很大的提升，然后，实在不行，发正我也没弄什么计数功能，自我催眠应该也挺容易的。如果还能结交到几个真正志同道合的朋友，那也是三生有幸了。"},{"title":"makise-kurise","date":"2010-08-21T10:38:45.000Z","url":"/2010/08b8ef5cec.html","categories":[["undefined",""]],"content":"this is my first makise kurisuそれは私の最初の牧瀬紅莉栖。"}]